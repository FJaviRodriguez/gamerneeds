services:
  mysql:
    image: mysql:8.0
    container_name: gamerneeds-mysql
    env_file: ./.env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./Backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - gamerneeds-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  backend:
    build: 
      context: ./Backend
      dockerfile: Dockerfile
    container_name: gamerneeds-backend
    env_file: ./.env  
    environment:
      - DB_HOST=mysql
      - NODE_ENV=production
      - FRONTEND_URL=${FRONTEND_URL}
      - BACKEND_URL=${BACKEND_URL}
    ports:
      - "5000:5000"
      - "9229:9229"
    volumes:
      - ./Backend:/app
      - /app/node_modules
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - gamerneeds-network

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: gamerneeds-frontend
    env_file: ./.env
    environment:
      - VITE_API_URL=${VITE_API_URL}
      - HOST=0.0.0.0
      - FRONTEND_URL=${FRONTEND_URL}
    ports:
      - "5173:5173"
    command: "npm run dev -- --host"
    depends_on:
      - backend
    networks:
      - gamerneeds-network

networks:
  gamerneeds-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local